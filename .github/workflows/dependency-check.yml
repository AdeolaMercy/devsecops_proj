name: Dependency Vulnerability Scan

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  dependency-scan:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: Install dependencies
      run: npm install
      working-directory: juice_shop

    - name: Run npm audits
      run: |
        npm audit --json > npmaudit-report.json
        cat juice_shop/npmaudit-report.json
      working-directory: juice_shop
      continue-on-error: true

    # Install Snyk CLI and authenticate
    - name: Install Snyk
      run: |
        npm install -g snyk
        snyk auth ${{ secrets.SNYK_TOKEN }}

    # Run Snyk test and generate report
    - name: Run Snyk dependency scan
      id: snyk
      working-directory: juice_shop
      continue-on-error: true
      run: |
        snyk test --json > snyk-report.json || true

    - name: Upload Snyk report
      uses: actions/upload-artifact@v4
      with:
        name: snyk-report
        path: juice_shop/snyk-report.json

    - name: Upload audit reports
      uses: actions/upload-artifact@v4
      with:
        name: audit-report
        path: juice_shop/audit-report.json

    - name: Print vulnerability summary
      id: summary
      run: |
        echo "================== Vulnerability Summary =================="
        SUMMARY=""

        if [ -s juice_shop/npmaudit-report.json ]; then
         NPM_SUMMARY=$(jq -r '
            [
              .vulnerabilities[]? | 
              {package: .name, severity: .severity, title: .title, url: .url}
            ] 
            | sort_by(.severity) 
            | .[] 
            | "Package: \(.package)\nSeverity: \(.severity)\nIssue: \(.title)\nURL: \(.url)\n-------------------------"
          ' juice_shop/audit-report.json)
          SUMMARY="$SUMMARY\n\n### npm audit\n$NPM_SUMMARY"
        else
          echo "No vulnerabilities found."
        fi

        #snyk summary
        if [ -s juice-shop/snyk-report.json ]; then
          SNYK_SUMMARY=$(jq -r '
            if (.vulnerabilities | length) == 0 then
              "‚úÖ No vulnerabilities found by Snyk."
            else
              .vulnerabilities[]
              | "üîπ Package: \(.packageName)\nSeverity: \(.severity)\nTitle: \(.title)\nURL: \(.url)\n-------------------------"
            end
          ' juice-shop/snyk-report.json)
          SUMMARY="$SUMMARY\n\n### Snyk Scan\n$SNYK_SUMMARY"
        else
          SUMMARY="$SUMMARY\n\n Snyk report missing or empty."
        fi

        echo -e "$SUMMARY"
        printf "%s\n" "$SUMMARY"
        SUMMARY="${SUMMARY//'%'/'%25'}"
        SUMMARY="${SUMMARY//$'\n'/'%0A'}"
        SUMMARY="${SUMMARY//$'\r'/'%0D'}"
        
        echo "summary=$SUMMARY" >> $GITHUB_OUTPUT

    - name: Comment on Pull Request
      uses: peter-evans/create-or-update-comment@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        issue-number: ${{ github.event.pull_request.number }}
        body: |
          ## üõ° Dependency Vulnerability Report
          
          ${{ steps.summary.outputs.summary }}

    - name: Fail if critical or high severity found
      working-directory: juice_shop
      shell: bash
      run: |
        NPM_HIGH=$(jq '[.vulnerabilities[]? | select(.severity=="high" or .severity=="critical")] | length' npm-audit.json)
        echo "npm audit - High/Critical count: $NPM_HIGH"

        # Check Snyk
        SNYK_HIGH=$(jq '[.vulnerabilities[]? | select(.severity=="high" or .severity=="critical")] | length' snyk-report.json)
        echo "Snyk - High/Critical count: $SNYK_HIGH"

        total_vuln=$((NPM_HIGH + SNYK_HIGH))
        if [ "total_high" -gt 0 ]; then
          echo "‚ùå High or critical vulnerabilities detected!"
          exit 1
        fi

    - name: Notify Slack on failure
      if: failure()  # Only runs when the previous job fails
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      run: |
        PAYLOAD=$(jq -n --arg repo "${{ github.repository }}" \
                         --arg url "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" \
                         --arg branch "${{ github.ref_name }}" \
                         --arg summary "${{ env.summary }}" \
        '{
          "attachments": [
            {
              "color": "#ff0000",
              "title": "‚ö†Ô∏è Dependency Check Failed",
              "fields": [
                {"title": "Repository", "value": $repo, "short": true},
                {"title": "Branch", "value": $branch, "short": true},
                {"title": "Details", "value": $summary, "short": false}
              ],
              "actions": [
                {
                  "type": "button",
                  "text": "View Workflow Run",
                  "url": $url
                }
              ]
            }
          ]
        }')

        curl -X POST -H 'Content-type: application/json' \
          --data "$PAYLOAD" \
          "$SLACK_WEBHOOK_URL"


